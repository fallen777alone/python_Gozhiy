# Дан список размера N. Найти минимальный из его локальных максимумов (локальный минимум — это элемент, который меньше любого из своих соседей).

import random

def find_min_local_max(lst):
    """
    Функция для поиска минимального из локальных максимумов в списке.
    Локальный максимум — это элемент, который больше своих соседей.
    """
    local_maxes = []  # Список для хранения локальных максимумов

    # Проверяем каждый элемент списка, кроме первого и последнего
    for i in range(1, len(lst) - 1):
        if lst[i] > lst[i - 1] and lst[i] > lst[i + 1]:
            local_maxes.append(lst[i])  # Добавляем локальный максимум в список

    # Если локальные максимумы найдены, возвращаем минимальный из них
    if local_maxes:
        return min(local_maxes)
    else:
        return None  # Если локальных максимумов нет, возвращаем None


# Задаем размер списка
try:
    while True:
        N = int(input("Введите размер списка: "))
        if N < 0:
            print("Размер списка не может быть отрицательным!")
            continue
        break

    # Генерируем случайный список размера N
    numbers = [random.randint(1, 100) for i in range(N)]

    # Выводим сгенерированный список
    print("Сгенерированный список:", numbers)

    # Вызываем функцию
    result = find_min_local_max(numbers)

    # Выводим результат
    if result is not None:
        print(f"Минимальный из локальных максимумов: {result}")
    else:
        print("В списке нет локальных максимумов.")
except ValueError:
    print("Ошибка при вводе данных!")